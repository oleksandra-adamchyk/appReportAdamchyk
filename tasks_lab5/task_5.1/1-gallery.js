// –î–∏–Ω–∞–º—ñ—á–Ω–∞ –≥–∞–ª–µ—Ä–µ—è –∑ Pixabay API - –í–ò–ü–†–ê–í–õ–ï–ù–ê –í–ï–†–°–Ü–Ø
const PIXABAY_KEY = "49759769-7f32cfe88a907b2cc03808f2c";
const THEMES = [
  "nature",
  "cat",
  "dog",
  "flowers",
  "child",
  "family",
  "friends",
  "party",
  "summer",
  "fun",
];
const IMAGE_COUNT = 9;

async function fetchImages() {
  // –ü—Ä–æ–±—É—î–º–æ –∫–æ–∂–Ω—É —Ç–µ–º—É –ø–æ —á–µ—Ä–∑—ñ –¥–æ –ø–µ—Ä—à–æ–≥–æ —É—Å–ø—ñ—Ö—É
  for (let i = 0; i < THEMES.length; i++) {
    const theme = THEMES[i];
    try {
      const response = await fetch(
        `https://pixabay.com/api/?key=${PIXABAY_KEY}&q=${encodeURIComponent(
          theme
        )}&image_type=photo&orientation=square&per_page=${IMAGE_COUNT}&safesearch=true`
      );

      if (!response.ok) {
        throw new Error(`Network or API error: ${response.status}`);
      }

      const data = await response.json();

      if (data.hits && data.hits.length > 0) {
        console.log(`–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è —Ç–µ–º–∏: ${theme}`);
        return data.hits.map((hit) => ({
          preview: hit.webformatURL,
          original: hit.largeImageURL,
          description: hit.tags || theme,
        }));
      }
    } catch (e) {
      console.error(`–ü–æ–º–∏–ª–∫–∞ –¥–ª—è —Ç–µ–º–∏ "${theme}":`, e);
      continue;
    }
  }
  return null;
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –∑ —É—Å—ñ—Ö —Ç–µ–º
async function fetchImagesFromAllThemes() {
  const allImages = [];

  for (const theme of THEMES) {
    try {
      const response = await fetch(
        `https://pixabay.com/api/?key=${PIXABAY_KEY}&q=${encodeURIComponent(
          theme
        )}&image_type=photo&orientation=square&per_page=3&safesearch=true`
      );

      if (response.ok) {
        const data = await response.json();
        if (data.hits && data.hits.length > 0) {
          const themeImages = data.hits.map((hit) => ({
            preview: hit.webformatURL,
            original: hit.largeImageURL,
            description: hit.tags || theme,
            theme: theme,
          }));
          allImages.push(...themeImages);
        }
      }
    } catch (e) {
      console.error(`–ü–æ–º–∏–ª–∫–∞ –¥–ª—è —Ç–µ–º–∏ "${theme}":`, e);
    }
  }

  return allImages.length > 0 ? allImages : null;
}

// –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–¥ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–∞–ª–µ—Ä–µ—ó
async function initGallery() {
  const gallery = document.querySelector(".gallery");

  if (!gallery) {
    console.error("–ï–ª–µ–º–µ–Ω—Ç –≥–∞–ª–µ—Ä–µ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
    return;
  }

  // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  gallery.innerHTML = `
    <div style="color: #666; font-size: 1.1em; padding: 2em; text-align: center;">
      <div>üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å...</div>
    </div>
  `;

  try {
    const images = await fetchImages(); // –∞–±–æ fetchImagesFromAllThemes()

    if (!images || !images.length) {
      gallery.innerHTML = `
        <div style="color: #888; font-size: 1.2em; padding: 2em; text-align: center;">
          –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞ –∂–æ–¥–Ω–æ—é –∑ —Ç–µ–º.<br>
          –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—É.<br>
          API Pixabay –º–æ–∂–µ –±—É—Ç–∏ —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –∞–±–æ –ª—ñ–º—ñ—Ç –≤–∏—á–µ—Ä–ø–∞–Ω–æ.
        </div>
      `;
      return;
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ–∑–º—ñ—Ç–∫—É –≥–∞–ª–µ—Ä–µ—ó —É –≤–∏–≥–ª—è–¥—ñ –∫–æ–º–ø–∞–∫—Ç–Ω–æ—ó —Å—ñ—Ç–∫–∏ 3x3
    const markup = images
      .slice(0, 9) // –ë–µ—Ä–µ–º–æ —Ç—ñ–ª—å–∫–∏ 9 –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è —Å—ñ—Ç–∫–∏ 3x3
      .map(
        ({ preview, original, description }) => `
        <div class="gallery-item">
          <img 
            src="${preview}" 
            alt="${description}"
            data-original="${original}"
            loading="lazy"
            onclick="openImageModal('${original}', '${description}')"
          />
        </div>
      `
      )
      .join("");

    // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ CSS Grid —Å—Ç–∏–ª—ñ –¥–ª—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ—ó —Å—ñ—Ç–∫–∏
    gallery.innerHTML = `
      <style>
        .gallery-container {
          display: grid;
          grid-template-columns: repeat(3, 1fr);
          grid-template-rows: repeat(3, 1fr);
          gap: 8px;
          padding: 20px;
          max-width: 600px;
          margin: 0 auto;
          aspect-ratio: 1;
        }
        
        .gallery-item {
          background: #fff;
          border-radius: 8px;
          overflow: hidden;
          cursor: pointer;
          transition: transform 0.2s ease, box-shadow 0.2s ease;
          box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .gallery-item:hover {
          transform: scale(1.05);
          box-shadow: 0 4px 15px rgba(0,0,0,0.2);
          z-index: 10;
        }
        
        .gallery-item img {
          width: 100%;
          height: 100%;
          object-fit: cover;
          display: block;
          aspect-ratio: 1;
        }
        
        /* –ê–¥–∞–ø—Ç–∏–≤–Ω—ñ—Å—Ç—å */
        @media (max-width: 768px) {
          .gallery-container {
            max-width: 90vw;
            gap: 6px;
            padding: 15px;
          }
        }
        
        @media (max-width: 480px) {
          .gallery-container {
            max-width: 95vw;
            gap: 4px;
            padding: 10px;
          }
        }
      </style>
      <div class="gallery-container">${markup}</div>
    `;
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥–∞–ª–µ—Ä–µ—ó:", error);
    gallery.innerHTML = `
      <div style="color: #d32f2f; font-size: 1.1em; padding: 2em; text-align: center;">
        ‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å: ${error.message}
      </div>
    `;
  }
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ –≤–µ–ª–∏–∫–∏–º –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º
function openImageModal(imageUrl, description) {
  const modal = document.createElement("div");
  modal.style.cssText = `
    position: fixed; top: 0; left: 0; width: 100%; height: 100%; 
    background: rgba(0,0,0,0.8); display: flex; justify-content: center; 
    align-items: center; z-index: 1000; cursor: pointer;
  `;

  modal.innerHTML = `
    <div style="max-width: 90%; max-height: 90%; text-align: center;">
      <img src="${imageUrl}" alt="${description}" style="max-width: 100%; max-height: 100%; border-radius: 8px;">
      <p style="color: white; margin-top: 16px; font-size: 1.1em;">${description}</p>
      <p style="color: #ccc; margin-top: 8px; font-size: 0.9em;">–ö–ª—ñ–∫–Ω—ñ—Ç—å –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è</p>
    </div>
  `;

  modal.onclick = () => document.body.removeChild(modal);
  document.body.appendChild(modal);
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –≥–∞–ª–µ—Ä–µ—é –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
if (document.readyState === "loading") {
  document.addEventListener("DOMContentLoaded", initGallery);
} else {
  initGallery();
}
